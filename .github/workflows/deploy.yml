on:
  push:
    branches:
      - master
      
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate zip file
        id: build-image
        run: |
          sudo apt-get update
          sudo apt-get install zip unzip
          zip -r hitmakers_radar.zip . -x "data/*" "node_modules/*" "build/*" ".git/*"
      
      - name: Create pem file
        id: create-pem
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.ssh/id_rsa.pem
          chmod 700 ~/.ssh/id_rsa.pem

      - name: Copy zip file into EC2
        id: scp-ec2
        env:
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pem hitmakers_radar.zip ${{ secrets.AWS_EC2_HOST }}:~/app/

      - name: Extrct zip file
        id: extract-zip
        env:
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: ssh -i ~/.ssh/id_rsa.pem ${{ secrets.AWS_EC2_HOST }} unzip -u -o /home/ec2-user/app/hitmakers_radar.zip -d /home/ec2-user/app/
      
      - name: Delete zip file
        id: delete-zip
        env:
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: ssh -i ~/.ssh/id_rsa.pem ${{ secrets.AWS_EC2_HOST }} rm -rf /home/ec2-user/app/hitmakers_radar.zip

      - name: Stoping docker compose
        id: compose-down
        env:
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: ssh -i ~/.ssh/id_rsa.pem ${{ secrets.AWS_EC2_HOST }} docker-compose -f /home/ec2-user/app/docker-compose.yml down

      - name: Starting docker compose
        id: compose-up
        env:
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
        run: ssh -i ~/.ssh/id_rsa.pem ${{ secrets.AWS_EC2_HOST }} docker-compose -f /home/ec2-user/app/docker-compose.yml up


